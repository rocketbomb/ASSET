@model ReflectionIT.Mvc.Paging.PagingList<ASSET.Models.Master.EmployeeFaculty>
@using ReflectionIT.Mvc.Paging
@addTagHelper *, ReflectionIT.Mvc.Paging

@{
	ViewData["Title"] = "Index";
	Layout = "~/Views/Shared/_Layout2.cshtml";
}
<table class="table table-borderless">

	<tr>
		<td>
			<h2>Employee Faculty</h2>
		</td>
		<td class="text-right">
			<div class="margin-bottom-5"></div>
			<a asp-action="Create" class="btn btn-info" role="button">Create New</a>
		</td>
	</tr>

</table>

<!-- BEGIN PAGE BREADCRUMB -->
<ul class="page-breadcrumb breadcrumb">
	<li>
		<a href="Index">Home</a>
		<i class="fa fa-circle"></i>
	</li>
	<li>
		<span class="active">Page Layouts</span>
	</li>
</ul>
<!-- END PAGE BREADCRUMB -->

<ul class="nav nav-tabs">
	<li class="active"><a href="#">List</a></li>
	<li><a href="#">Search</a></li>

</ul>

<form method="get" class="form-inline">

	<div class="form-group">
		<label>Code</label>
		<input name="filterCode" class="form-control" placeholder="Enter Code" value="@Model.RouteValue["filterCode"]" />
	</div>
	<div class="form-group">
		<label>Name</label>
		<input name="filterName" class="form-control" placeholder="Enter Name" value="@Model.RouteValue["filterName"]" />
	</div>

	<button type="submit" class="btn btn-primary">
		<span class="glyphicon glyphicon-search" aria-hidden="true"></span> Search
	</button>
</form>

<table class="table table-bordered table-condensed table-hover">
	<thead>
		<tr>
			<th>
				@Html.SortableHeaderFor(model => model.Code)
			</th>
			<th>
				@Html.SortableHeaderFor(model => model.Name)
			</th>
			<th>
				@Html.SortableHeaderFor(model => model.University.NameEng)
			</th>
			@*<th>
					@Html.DisplayNameFor(model => model.CreateBy)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.CreateDate)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.UpdateBy)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.UpdateDate)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.IsActive)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.IsDelete)
				</th>*@
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.Code)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Name)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.University.NameEng)
				</td>
				@*<td>
						@Html.DisplayFor(modelItem => item.CreateBy)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.CreateDate)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.UpdateBy)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.UpdateDate)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.IsActive)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.IsDelete)
					</td>*@
				<td>
					<a asp-action="Edit" asp-route-id="@item.EmployeeFacultyId">Edit</a> |
					@*<a asp-action="Details" asp-route-id="@item.EmployeeFacultyId">Details</a> |*@
					<a asp-action="Delete" asp-route-id="@item.EmployeeFacultyId">Delete</a>
				</td>
			</tr>
		}
	</tbody>
</table>

<nav>
	@await this.Component.InvokeAsync("Pager", new { PagingList = this.Model })
</nav>